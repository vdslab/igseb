import "./chunk-5CYG367S.js";

// node_modules/d3-force-cluster/dist/d3-force-cluster.mjs
function cluster(_centers) {
  var nodes = void 0, centerpoints = [], strength = 0.1, centerInertia = 0;
  if (typeof _centers !== "function")
    _centers = function centers() {
      return _centers;
    };
  function force(alpha) {
    alpha *= strength * alpha;
    var c = void 0, x = void 0, y = void 0, l = void 0, r = void 0;
    nodes.forEach(function(d, i) {
      c = centerpoints[i];
      if (!c || c === d)
        return;
      x = d.x - c.x, y = d.y - c.y, l = Math.sqrt(x * x + y * y), r = d.radius + (c.radius || 0);
      if (l && l != r) {
        l = (l - r) / l * alpha;
        d.x -= x *= l;
        d.y -= y *= l;
        c.x += (1 - centerInertia) * x;
        c.y += (1 - centerInertia) * y;
      }
    });
  }
  function initialize() {
    if (!nodes)
      return;
    var i = void 0, n = nodes.length;
    centerpoints = new Array(n);
    for (i = 0; i < n; i++) {
      centerpoints[i] = _centers(nodes[i], i, nodes);
    }
  }
  force.initialize = function(_) {
    nodes = _;
    initialize();
  };
  force.centers = function(_) {
    if (_ == null)
      return _centers;
    _centers = typeof _ === "function" ? _ : function(n, i) {
      return _[i];
    };
    initialize();
    return force;
  };
  force.strength = function(_) {
    return _ == null ? strength : (strength = +_, force);
  };
  force.centerInertia = function(_) {
    return _ == null ? centerInertia : (centerInertia = +_, force);
  };
  return force;
}
export {
  cluster as forceCluster
};
//# sourceMappingURL=d3-force-cluster.js.map
